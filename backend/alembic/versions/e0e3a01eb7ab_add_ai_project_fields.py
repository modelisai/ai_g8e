"""Add AI project fields

Revision ID: e0e3a01eb7ab
Revises: 
Create Date: 2024-10-12 19:38:55.553696

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e0e3a01eb7ab'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ai_projects', sa.Column('creation_date', sa.Date(), nullable=True))
    op.add_column('ai_projects', sa.Column('last_updated_date', sa.Date(), nullable=True))
    op.add_column('ai_projects', sa.Column('start_date', sa.Date(), nullable=True))
    op.add_column('ai_projects', sa.Column('estimated_completion_date', sa.Date(), nullable=True))
    op.add_column('ai_projects', sa.Column('actual_completion_date', sa.Date(), nullable=True))
    op.add_column('ai_projects', sa.Column('sponsor', sa.String(), nullable=True))
    op.add_column('ai_projects', sa.Column('project_manager', sa.String(), nullable=True))
    op.add_column('ai_projects', sa.Column('team_members', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('ai_models', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('programming_languages', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('frameworks_and_libraries', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('repository_uri', sa.String(), nullable=True))
    op.add_column('ai_projects', sa.Column('development_environment', sa.String(), nullable=True))
    op.add_column('ai_projects', sa.Column('data_sources', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('data_storage_location', sa.String(), nullable=True))
    op.add_column('ai_projects', sa.Column('data_sensitivity_level', sa.String(), nullable=True))
    op.add_column('ai_projects', sa.Column('data_retention_policy', sa.String(), nullable=True))
    op.add_column('ai_projects', sa.Column('risk_assessment_score', sa.Float(), nullable=True))
    op.add_column('ai_projects', sa.Column('compliance_status', sa.String(), nullable=True))
    op.add_column('ai_projects', sa.Column('applicable_policies', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('regulatory_requirements', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('kpis', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('model_accuracy', sa.Float(), nullable=True))
    op.add_column('ai_projects', sa.Column('processing_time', sa.Float(), nullable=True))
    op.add_column('ai_projects', sa.Column('resource_usage', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('potential_biases', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('fairness_measures', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('transparency_level', sa.String(), nullable=True))
    op.add_column('ai_projects', sa.Column('deployment_environment', sa.String(), nullable=True))
    op.add_column('ai_projects', sa.Column('api_endpoints', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('scalability_info', sa.String(), nullable=True))
    op.add_column('ai_projects', sa.Column('technical_documentation_uri', sa.String(), nullable=True))
    op.add_column('ai_projects', sa.Column('user_guide_uri', sa.String(), nullable=True))
    op.add_column('ai_projects', sa.Column('model_cards', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('version_history', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('changelog', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('allocated_budget', sa.Float(), nullable=True))
    op.add_column('ai_projects', sa.Column('current_spend', sa.Float(), nullable=True))
    op.add_column('ai_projects', sa.Column('resource_allocation', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('external_dependencies', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('internal_project_dependencies', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('security_clearance_level', sa.String(), nullable=True))
    op.add_column('ai_projects', sa.Column('access_control_list', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('encryption_details', sa.String(), nullable=True))
    op.add_column('ai_projects', sa.Column('monitoring_tools', sa.JSON(), nullable=True))
    op.add_column('ai_projects', sa.Column('maintenance_schedule', sa.String(), nullable=True))
    op.add_column('ai_projects', sa.Column('incident_response_plan', sa.String(), nullable=True))
    op.drop_column('ai_projects', 'risk_score')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ai_projects', sa.Column('risk_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_column('ai_projects', 'incident_response_plan')
    op.drop_column('ai_projects', 'maintenance_schedule')
    op.drop_column('ai_projects', 'monitoring_tools')
    op.drop_column('ai_projects', 'encryption_details')
    op.drop_column('ai_projects', 'access_control_list')
    op.drop_column('ai_projects', 'security_clearance_level')
    op.drop_column('ai_projects', 'internal_project_dependencies')
    op.drop_column('ai_projects', 'external_dependencies')
    op.drop_column('ai_projects', 'resource_allocation')
    op.drop_column('ai_projects', 'current_spend')
    op.drop_column('ai_projects', 'allocated_budget')
    op.drop_column('ai_projects', 'changelog')
    op.drop_column('ai_projects', 'version_history')
    op.drop_column('ai_projects', 'model_cards')
    op.drop_column('ai_projects', 'user_guide_uri')
    op.drop_column('ai_projects', 'technical_documentation_uri')
    op.drop_column('ai_projects', 'scalability_info')
    op.drop_column('ai_projects', 'api_endpoints')
    op.drop_column('ai_projects', 'deployment_environment')
    op.drop_column('ai_projects', 'transparency_level')
    op.drop_column('ai_projects', 'fairness_measures')
    op.drop_column('ai_projects', 'potential_biases')
    op.drop_column('ai_projects', 'resource_usage')
    op.drop_column('ai_projects', 'processing_time')
    op.drop_column('ai_projects', 'model_accuracy')
    op.drop_column('ai_projects', 'kpis')
    op.drop_column('ai_projects', 'regulatory_requirements')
    op.drop_column('ai_projects', 'applicable_policies')
    op.drop_column('ai_projects', 'compliance_status')
    op.drop_column('ai_projects', 'risk_assessment_score')
    op.drop_column('ai_projects', 'data_retention_policy')
    op.drop_column('ai_projects', 'data_sensitivity_level')
    op.drop_column('ai_projects', 'data_storage_location')
    op.drop_column('ai_projects', 'data_sources')
    op.drop_column('ai_projects', 'development_environment')
    op.drop_column('ai_projects', 'repository_uri')
    op.drop_column('ai_projects', 'frameworks_and_libraries')
    op.drop_column('ai_projects', 'programming_languages')
    op.drop_column('ai_projects', 'ai_models')
    op.drop_column('ai_projects', 'team_members')
    op.drop_column('ai_projects', 'project_manager')
    op.drop_column('ai_projects', 'sponsor')
    op.drop_column('ai_projects', 'actual_completion_date')
    op.drop_column('ai_projects', 'estimated_completion_date')
    op.drop_column('ai_projects', 'start_date')
    op.drop_column('ai_projects', 'last_updated_date')
    op.drop_column('ai_projects', 'creation_date')
    # ### end Alembic commands ###
